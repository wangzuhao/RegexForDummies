{name:"session 7", layoutItems: [
                {header:"Tests", sessionIndex:"7",
                subHeader:'To write an regular expression to pass the following cases',
                vModel:"Match   file_record_transcript.pdf\n"+
                       "Match   file_07241999.pdf\n"+
                       "Skip    testfile_fake.pdf.tmp\n\n"+
                       "Please only capture lines that start with 'file' and have the file extension '.pdf'\n" },
                {header:"Editable Code Block",
                subHeader:'Please write your regex here',
                vModel:""},
                {header:"Capture Group", subHeader:'',
                vModel:"One day, Joffrey asked John to pick up all the names of pdf files in the company document library with fixed prefix. There were so many documents in the company directory that he didn't know where to start, so he asked Sam for help. Sam gave him detailed instructions on how to accomplish this task with REGEX."+
                       "\n\n"+
                       "Regular expressions allow us to not just match text but also to extract information for further processing. This is done by defining groups of characters and capturing them using the special parentheses ( and ) metacharacters. Any subpattern inside a pair of parentheses will be captured as a group. In practice, this can be used to extract information like phone numbers or emails from all sorts of data."+
                       "\n\n"+
                       "Imagine for example that you had a command line tool to list all the image files you have in the cloud. You could then use a pattern such as ^(IMG\d+\.png)$ to capture and extract the full filename, but if you only wanted to capture the filename without the extension, you could use the pattern ^(IMG\d+)\.png$ which only captures the part before the period."+
                       "\n\n"+
                       "If each of these image files had a sequential picture number in the filename, you could extract both the filename and the picture number using the same pattern by writing an expression like ^(IMG(\d+))\.png$ (using a nested parenthesis to capture the digits)."+
                       "\n\n"+ 
                       "All the quantifiers including the star *, plus +, repetition {m,n} and the question mark ? can all be used within the capture group patterns. This is the only way to apply quantifiers on sequences of characters instead of the individual characters themselves."+
                       "\n\n"+ 
                       "Summary: "+
                       "\n\n"+
                       "(â€¦) Capture Group "+
                       "\n\n"+
                       "(a(bc)) Capture Sub-group "+
                       "\n\n"+
                       "(.*) Capture all\n"
                }
                ], status:" ðŸ”´"}
