{name:"session 6", layoutItems: [
                {header:"Tests", sessionIndex:"6",
                subHeader:'To write an regular expression to pass the following cases',
                vModel:"Now we have 26 letters on the earth, if an ET prepares to go back to his planet, then what are we left with? Please try to use REGEX to capture them separately."+
                "\n\n"+
                "The letteres are in upper cases."+
                "\n\n"+
                "For example, you should match letter A, but skip letter E."
                },
                {header:"Editable Code Block",
                subHeader:'Please write your regex here using what you have learned in this lesson (Note: we are using the version of  python here.)',
                vModel:"" }, 
                {header:"Character Class Subtraction and Intersection", subHeader:'',
                vModel:"When completing some problems, Joffrey expects John to simplify the steps. John felt confused about Joffrey's opinion, so Sam introduced subtraction and intersection to John.\n\n"+
                       "(1) Subtraction"+
                       "\n\n"+
                       "Character class subtraction makes it easy to match any single character present in one list (the character class), but not present in another list (the subtracted class)."+
                       "\n\n"+
                       "The syntax for this is [class-[subtract]]."+
                       "\n\n"+
                       "If the character after a hyphen is an opening bracket, these flavors interpret the hyphen as the subtraction operator rather than the range operator. You can use the full character class syntax within the subtracted character class. In general, the character class [a-z-[aeiuo]] matches a single letter that is not a vowel. In other words: it matches a single consonant. "+
                       "\n\n"+
                       "Here we only focus on the version which can be used in python. The character class should be expressed as (?![aeiou])[a-z]. The negative lookahead asserts that the following character is not a lowercase vowel. Then [a-z] matches a letter, which is guaranteed not to be a vowel. Without character class subtraction or intersection, the only way to do this would be to list all consonants: [b-df-hj-np-tv-z]. "+
                       "\n\n"+
                       "(2) Intersection"+
                       "\n\n"+
                       "Character class intersection makes it easy to match any single character that must be present in two sets of characters. You can use the full character class syntax within the intersected character class."+
                       "\n\n"+
                       "The syntax for this is [class&&[intersect]]."+
                       "\n\n"+
                       "The character class [a-z&&[^aeiuo]] matches a single letter that is not a vowel. In other words: it matches a single consonant. Without character class subtraction or intersection, the only way to do this would be to list all consonants: [b-df-hj-np-tv-z]."+
                       "\n"}
                ], status:" ðŸ”´"}
